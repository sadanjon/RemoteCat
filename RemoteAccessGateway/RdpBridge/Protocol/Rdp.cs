// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Rdp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RdpBridge.Protocol {

  /// <summary>Holder for reflection information generated from Rdp.proto</summary>
  public static partial class RdpReflection {

    #region Descriptor
    /// <summary>File descriptor for Rdp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RdpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglSZHAucHJvdG8SA1JkcCK2AQoOUmRwTWVzc2FnZUJhc2USKQoHY29ubmVj",
            "dBgBIAEoCzIWLlJkcC5SZHBDb25uZWN0TWVzc2FnZUgAEi8KCmRpc2Nvbm5l",
            "Y3QYAiABKAsyGS5SZHAuUmRwRGlzY29ubmVjdE1lc3NhZ2VIABI9ChF2ZXJp",
            "ZnlDZXJ0aWZpY2F0ZRgDIAEoCzIgLlJkcC5SZHBWZXJpZnlDZXJ0aWZpY2F0",
            "ZU1lc3NhZ2VIAEIJCgdtZXNzYWdlIlUKEVJkcENvbm5lY3RNZXNzYWdlEgwK",
            "BGhvc3QYASABKAkSEAoIdXNlcm5hbWUYAiABKAkSEAoIcGFzc3dvcmQYAyAB",
            "KAkSDgoGZG9tYWluGAQgASgJIhYKFFJkcERpc2Nvbm5lY3RNZXNzYWdlImMK",
            "G1JkcFZlcmlmeUNlcnRpZmljYXRlTWVzc2FnZRIVCg14NTA5Q2VydEJ5dGVz",
            "GAEgASgMEhAKCGhvc3RuYW1lGAIgASgJEgwKBHBvcnQYAyABKA0SDQoFZmxh",
            "Z3MYBCABKA1CFaoCElJkcEJyaWRnZS5Qcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RdpBridge.Protocol.RdpMessageBase), global::RdpBridge.Protocol.RdpMessageBase.Parser, new[]{ "Connect", "Disconnect", "VerifyCertificate" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RdpBridge.Protocol.RdpConnectMessage), global::RdpBridge.Protocol.RdpConnectMessage.Parser, new[]{ "Host", "Username", "Password", "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RdpBridge.Protocol.RdpDisconnectMessage), global::RdpBridge.Protocol.RdpDisconnectMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RdpBridge.Protocol.RdpVerifyCertificateMessage), global::RdpBridge.Protocol.RdpVerifyCertificateMessage.Parser, new[]{ "X509CertBytes", "Hostname", "Port", "Flags" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RdpMessageBase : pb::IMessage<RdpMessageBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RdpMessageBase> _parser = new pb::MessageParser<RdpMessageBase>(() => new RdpMessageBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RdpMessageBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RdpBridge.Protocol.RdpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpMessageBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpMessageBase(RdpMessageBase other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.VerifyCertificate:
          VerifyCertificate = other.VerifyCertificate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpMessageBase Clone() {
      return new RdpMessageBase(this);
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RdpBridge.Protocol.RdpConnectMessage Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::RdpBridge.Protocol.RdpConnectMessage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RdpBridge.Protocol.RdpDisconnectMessage Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::RdpBridge.Protocol.RdpDisconnectMessage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "verifyCertificate" field.</summary>
    public const int VerifyCertificateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RdpBridge.Protocol.RdpVerifyCertificateMessage VerifyCertificate {
      get { return messageCase_ == MessageOneofCase.VerifyCertificate ? (global::RdpBridge.Protocol.RdpVerifyCertificateMessage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VerifyCertificate;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Connect = 1,
      Disconnect = 2,
      VerifyCertificate = 3,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RdpMessageBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RdpMessageBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(VerifyCertificate, other.VerifyCertificate)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.VerifyCertificate) hash ^= VerifyCertificate.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(10);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(18);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.VerifyCertificate) {
        output.WriteRawTag(26);
        output.WriteMessage(VerifyCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(10);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(18);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.VerifyCertificate) {
        output.WriteRawTag(26);
        output.WriteMessage(VerifyCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.VerifyCertificate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyCertificate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RdpMessageBase other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::RdpBridge.Protocol.RdpConnectMessage();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::RdpBridge.Protocol.RdpDisconnectMessage();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.VerifyCertificate:
          if (VerifyCertificate == null) {
            VerifyCertificate = new global::RdpBridge.Protocol.RdpVerifyCertificateMessage();
          }
          VerifyCertificate.MergeFrom(other.VerifyCertificate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::RdpBridge.Protocol.RdpConnectMessage subBuilder = new global::RdpBridge.Protocol.RdpConnectMessage();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 18: {
            global::RdpBridge.Protocol.RdpDisconnectMessage subBuilder = new global::RdpBridge.Protocol.RdpDisconnectMessage();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 26: {
            global::RdpBridge.Protocol.RdpVerifyCertificateMessage subBuilder = new global::RdpBridge.Protocol.RdpVerifyCertificateMessage();
            if (messageCase_ == MessageOneofCase.VerifyCertificate) {
              subBuilder.MergeFrom(VerifyCertificate);
            }
            input.ReadMessage(subBuilder);
            VerifyCertificate = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::RdpBridge.Protocol.RdpConnectMessage subBuilder = new global::RdpBridge.Protocol.RdpConnectMessage();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 18: {
            global::RdpBridge.Protocol.RdpDisconnectMessage subBuilder = new global::RdpBridge.Protocol.RdpDisconnectMessage();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 26: {
            global::RdpBridge.Protocol.RdpVerifyCertificateMessage subBuilder = new global::RdpBridge.Protocol.RdpVerifyCertificateMessage();
            if (messageCase_ == MessageOneofCase.VerifyCertificate) {
              subBuilder.MergeFrom(VerifyCertificate);
            }
            input.ReadMessage(subBuilder);
            VerifyCertificate = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RdpConnectMessage : pb::IMessage<RdpConnectMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RdpConnectMessage> _parser = new pb::MessageParser<RdpConnectMessage>(() => new RdpConnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RdpConnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RdpBridge.Protocol.RdpReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpConnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpConnectMessage(RdpConnectMessage other) : this() {
      host_ = other.host_;
      username_ = other.username_;
      password_ = other.password_;
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpConnectMessage Clone() {
      return new RdpConnectMessage(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 4;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RdpConnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RdpConnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RdpConnectMessage other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RdpDisconnectMessage : pb::IMessage<RdpDisconnectMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RdpDisconnectMessage> _parser = new pb::MessageParser<RdpDisconnectMessage>(() => new RdpDisconnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RdpDisconnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RdpBridge.Protocol.RdpReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpDisconnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpDisconnectMessage(RdpDisconnectMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpDisconnectMessage Clone() {
      return new RdpDisconnectMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RdpDisconnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RdpDisconnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RdpDisconnectMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class RdpVerifyCertificateMessage : pb::IMessage<RdpVerifyCertificateMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RdpVerifyCertificateMessage> _parser = new pb::MessageParser<RdpVerifyCertificateMessage>(() => new RdpVerifyCertificateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RdpVerifyCertificateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RdpBridge.Protocol.RdpReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpVerifyCertificateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpVerifyCertificateMessage(RdpVerifyCertificateMessage other) : this() {
      x509CertBytes_ = other.x509CertBytes_;
      hostname_ = other.hostname_;
      port_ = other.port_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RdpVerifyCertificateMessage Clone() {
      return new RdpVerifyCertificateMessage(this);
    }

    /// <summary>Field number for the "x509CertBytes" field.</summary>
    public const int X509CertBytesFieldNumber = 1;
    private pb::ByteString x509CertBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString X509CertBytes {
      get { return x509CertBytes_; }
      set {
        x509CertBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 2;
    private string hostname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hostname {
      get { return hostname_; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    private uint flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RdpVerifyCertificateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RdpVerifyCertificateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X509CertBytes != other.X509CertBytes) return false;
      if (Hostname != other.Hostname) return false;
      if (Port != other.Port) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X509CertBytes.Length != 0) hash ^= X509CertBytes.GetHashCode();
      if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X509CertBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(X509CertBytes);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hostname);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X509CertBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(X509CertBytes);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hostname);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X509CertBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(X509CertBytes);
      }
      if (Hostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RdpVerifyCertificateMessage other) {
      if (other == null) {
        return;
      }
      if (other.X509CertBytes.Length != 0) {
        X509CertBytes = other.X509CertBytes;
      }
      if (other.Hostname.Length != 0) {
        Hostname = other.Hostname;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            X509CertBytes = input.ReadBytes();
            break;
          }
          case 18: {
            Hostname = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            X509CertBytes = input.ReadBytes();
            break;
          }
          case 18: {
            Hostname = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
